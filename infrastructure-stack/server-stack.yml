AWSTemplateFormatVersion: "2010-09-09"

Mappings:
  RegionMap:
    us-east-1:
      Short: use1
      Shorter: e1
    us-west-2:
      Short: usw2
      Shorter: w2

Parameters:
  EnvironmentName:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /iac/udagram/EnvironmentName
  AppKey:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /iac/udagram/AppKey
  AMI:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /iac/udagram/ubuntu18AMI
  EC2Type:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /iac/udagram/EC2IntanceType
  EC2KeyPair:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /iac/udagram/EC2KeyPair
  
Resources:
  LBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: LBSecurityGroup
      GroupDescription: Allow http to our load balancer
      VpcId:
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-LBSecurityGroup

  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: WebServerSecurityGroup
      GroupDescription: Allow http to our web server
      VpcId: 
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-WebServerSecurityGroup

  WebAppLaunchConfig: 
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo apt-get update -y
          sudo apt-get install apache2 -y
          sudo systemctl start apache2.service
          cd /var/www/html
          echo "it works! Udagram, Udacity" > index.html
      ImageId: !Ref AMI
      SecurityGroups: 
      - Ref: WebServerSecurityGroup
      InstanceType: !Ref EC2Type
      KeyName: !Ref EC2KeyPair
      BlockDeviceMappings:
      - DeviceName: "/dev/sdk"
        Ebs:
          VolumeSize: 10

  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: 
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"

  WebAppAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue: !Sub "${EnvironmentName}-PRIV-NETS"
      LaunchConfigurationName:
        Ref: WebAppLaunchConfig
      MinSize: '2'
      MaxSize: '4'
      TargetGroupARNs:
      - Ref: WebAppTargetGroup

  WebAppLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
      - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
      - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
      SecurityGroups:
      - Ref: LBSecurityGroup

  WebAppLBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: WebAppTargetGroup
      LoadBalancerArn:
        Ref: WebAppLoadBalancer
      Port: '80'
      Protocol: HTTP

  WebAppLBListenerRule:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
        Actions:
        - Type: forward
          TargetGroupArn: !Ref 'WebAppTargetGroup'
        Conditions:
        - Field: path-pattern
          Values: [/]
        ListenerArn: !Ref 'WebAppLBListener'
        Priority: 1

Outputs:
  LoadBalancerUrl:
    Description: The URL of the WebApp LoadBalancer
    Value: !Sub
    - http://${Domain}
    - Domain: !GetAtt WebAppLoadBalancer.DNSName
    Export:
      Name: !Sub ${AppKey}-LB-DNSName


